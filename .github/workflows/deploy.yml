name: Build and Deploy
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - uses: GuillaumeFalourd/setup-rsync@v1.2
      - run: rsync --version

      - name: Install dependencies
        run: npm ci

      - name: Build site
        run: npm run build

      - name: Deploy to GitHub Pages üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages # The branch the action should deploy to
          folder: dist # The folder the action should deploy
          clean: true # Automatically remove deleted files from the deploy branc

  push-to-font-repo:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Checkout nest gh-pages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: nest
      - name: Checkout garment-sans repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/garment-sans
          ref: main
          path: garment-sans
          token: ${{ secrets.TEST_PAT }} # Personal Access Token with repo permissions

      - name: Copy dist content to nest-font repository
        run: |
          # Remove everything from garment-sans repository except .git directory
          find garment-sans -mindepth 1 -maxdepth 1 -not -path "garment-sans/.git*" -not -wholename "garment-sans/CNAME" -exec rm -rf {} \;

          # Copy the dist folder contents to garment-sans repository
          cp -r nest/font/index.html garment-sans/
          cp -r nest/font/* garment-sans/font/
          cp -r nest/static garment-sans/
          echo $(ls garment-sans/)
      - name: Commit and push changes
        run: |
          cd garment-sans
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add -A

          # Get the commit hash from the source repository
          SOURCE_COMMIT=$(cd ../nest && git rev-parse --short HEAD)

          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update from nest gh-pages (commit: ${SOURCE_COMMIT})"
            git push
            echo "‚úÖ Successfully pushed garment-sans/ content to garment-sans repository"
          fi

  push-to-film-repo:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Checkout nest gh-pages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: nest
      - name: Checkout filmkach repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/filmkach
          ref: main
          path: filmkach
          token: ${{ secrets.TEST_PAT }} # Personal Access Token with repo permissions

      - name: Copy dist content to nest-font repository
        run: |
          # Remove everything from filmkach repository except .git directory
          find filmkach -mindepth 1 -maxdepth 1 -not -path "filmkach/.git*" -not -wholename "filmkach/CNAME" -exec rm -rf {} \;

          # Copy the dist folder contents to filmkach repository
          cp -r nest/film/index.html filmkach/
          cp -r nest/film/* filmkach/film/
          cp -r nest/static filmkach/
          echo $(ls filmkach/)
      - name: Commit and push changes
        run: |
          cd filmkach
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add -A

          # Get the commit hash from the source repository
          SOURCE_COMMIT=$(cd ../nest && git rev-parse --short HEAD)

          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update from nest gh-pages (commit: ${SOURCE_COMMIT})"
            git push
            echo "‚úÖ Successfully pushed filmkach/ content to filmkach repository"
          fi
